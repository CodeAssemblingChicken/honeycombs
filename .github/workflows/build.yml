name: Build
on:
  pull_request:
  push:
    branches:
      - master
  # schedule:
  #   - cron: "00 01 * * *"

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - uses: Swatinem/rust-cache@v1

      - name: Install Ubuntu dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y -qq libasound2-dev libssl-dev libpulse-dev libdbus-1-dev libudev-dev

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
  # , windows-latest, macos-latest
  test:
    name: Test Suite
    strategy:
      matrix:
        os: [ubuntu-latest]
        include:
          - os: macos-latest
            features: portaudio_backend,rodio_backend,dbus_keyring
          - os: ubuntu-latest
            features: alsa_backend,rodio_backend,dbus_keyring,dbus_mpris
        rust: [stable]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true

      - uses: Swatinem/rust-cache@v1

      - name: Install dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y -qq libasound2-dev libssl-dev libpulse-dev libdbus-1-dev libudev-dev

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test

  lints:
    name: Lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - uses: Swatinem/rust-cache@v1

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Install Ubuntu dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y -qq libasound2-dev libssl-dev libpulse-dev libdbus-1-dev libudev-dev

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -A warnings

      - name: Run rustdoc lints
        uses: actions-rs/cargo@v1
        env:
          RUSTDOCFLAGS: "-A missing_docs -A rustdoc::missing_doc_code_examples"
        with:
          command: doc
          args: --workspace --all-features --no-deps --document-private-items
